var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SchottkyAnoMaLy","category":"page"},{"location":"#SchottkyAnoMaLy","page":"Home","title":"SchottkyAnoMaLy","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SchottkyAnoMaLy.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SchottkyAnoMaLy]","category":"page"},{"location":"#SchottkyAnoMaLy.DonutVolcanoEnsemble","page":"Home","title":"SchottkyAnoMaLy.DonutVolcanoEnsemble","text":"DonutVolcanoEnsemble{T <: AbstractFloat}\n\nAn ensemble of M donutvolcanos takes the form \n\nmathrmp_M(x) = frac1M sum_k=1^M mathrmdonutvolcano(x mu_k sigma_k)\n\nThis object is a wrapper around an ensemble::Vector{Tuple{T, T}} for the individual donutvolcanos.\n\n\n\n\n\n","category":"type"},{"location":"#SchottkyAnoMaLy.DonutVolcanoEnsemble-Union{Tuple{Array{Tuple{T, T}, 1}}, Tuple{T}} where T","page":"Home","title":"SchottkyAnoMaLy.DonutVolcanoEnsemble","text":"DonutVolcanoEnsemble(args...)\n\nVarious interfaces to a DonutVolcanoEnsemble\n\nCopy/Move constructors\n\nDonutVolcanoEnsemble(::Vector{Tuple{T, T}})\nCreate an ensemble from a Vector of (μ, σ) Tuples of the same Type.\nDonutVolcanoEnsemble(::Vector{Tuple{T, U}})\nCreate an ensemble from a Vector of (μ, σ) Tuples of the different Types. \nThe type of the ensemble is chosen by Base.promote_type.\nDonutVolcanoEnsemble(::Type{S}, ::Vector{Tuple{T, U}})\nCreate an ensemble from a Vector of (μ, σ) Tuples of the different Types into an ensemble of with preferred type S.\nThe ultimate type of the ensemble is chosen by Base.promote_type.\n\nEmpty constructors\n\nDonutVolcanoEnsemble(::Type{S})\nCreate an empty ensemble of chosen type S.\nDonutVolcanoEnsemble()\nCreate an empty ensemble. By default the type is Float64.\n\n\n\n\n\n","category":"method"},{"location":"#SchottkyAnoMaLy.Theta-Tuple{Any}","page":"Home","title":"SchottkyAnoMaLy.Theta","text":"Theta(x)\n\nPackage-specific implementation of the Heaviside Theta function. Our definition is\n\nTheta(x) = begincases\n1  x geq 0\n\n0  mathrmotherwise\nendcases\n\n\n\n\n\n","category":"method"},{"location":"#SchottkyAnoMaLy.donutvolcano-Tuple{Any, Any, Any}","page":"Home","title":"SchottkyAnoMaLy.donutvolcano","text":"donutvolcano(x, μ, σ)\n\nThe donutvolcano distribution calculated for an input x with center μ and width σ. The argument x can be a scalar or broadcastable.\n\nThe distribution itself is given by \n\nrm donutvolcano(x μ σ) = fracx Theta(x)mathcalN(musigma) expleft -fracleft(x - muright)^22sigma^2 right\n\nwhere we use our own Heaviside Theta function above. The normalization constant mathcalN(musigma) given by norm_donutvolcano.\n\n\n\n\n\n","category":"method"},{"location":"#SchottkyAnoMaLy.ensemble-Tuple{DonutVolcanoEnsemble}","page":"Home","title":"SchottkyAnoMaLy.ensemble","text":"ensemble(::DonutVolcanoEnsemble)\n\nGetter for the Vector{Tuple{T, T}} of the given ensemble.\n\n\n\n\n\n","category":"method"},{"location":"#SchottkyAnoMaLy.get_pair-Tuple{DonutVolcanoEnsemble, Any}","page":"Home","title":"SchottkyAnoMaLy.get_pair","text":"get_pair(::DonutVolcanoEnsemble, pair_idx) -> Tuple{T, T}\n\nGetter for a single pair (Tuple{T, T}) at a specified pair_idx.\n\n\n\n\n\n","category":"method"},{"location":"#SchottkyAnoMaLy.norm_donutvolcano-Tuple{Any, Any}","page":"Home","title":"SchottkyAnoMaLy.norm_donutvolcano","text":"norm_donutvolcano(μ, σ)\n\nThe normalization for a donutvolcano distribution with center μ and width σ. The explicit form is given by\n\nmathcalN(mu sigma) = sqrtfracpi 2 mu  sigma \n   lefttexterfleft(fracmu sqrt2 sigma\nright)+1right+sigma ^2 rm e^-fracmu ^22 sigma ^2\n\n\n\n\n\n","category":"method"},{"location":"#SchottkyAnoMaLy.npairs-Tuple{DonutVolcanoEnsemble}","page":"Home","title":"SchottkyAnoMaLy.npairs","text":"npairs(::DonutVolcanoEnsemble)\n\nReturn the number of donutvolcano in the DonutVolcanoEnsemble.\n\n\n\n\n\n","category":"method"}]
}
